{
	"Common PSCmdlet class": {
		"prefix": "ps-function-common",
        "scope": "powershell",
		"body": [
            "Function ${1|Add,Clear,Close,Copy,Enter,Exit,Find,Format,Get,Hide,Join,Lock,Move,New,Open,Optimize,Push,Pop,Redo,Remove,Rename,Reset,Resize,Search,Select,Set,Show,Skip,Split,Step,Switch,Undo,Unlock,Watch|}-${2:Noun} {",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
		],
        "description": "PowerShell function using verb from System.Management.Automation.VerbsCommon."
	},
	"Communications PSCmdlet class": {
		"prefix": "ps-function-communications",
        "scope": "powershell",
		"body": [
            "[CmdletBinding()]"
            "Function ${1|Connect,Disconnect,Read,Receive,Send,Write|}-${2:Noun}\")]",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
        ],
        "description": "PowerShell function using verb from System.Management.Automation.VerbsCommunications."
	},
	"Data PSCmdlet class": {
		"prefix": "ps-function-data",
        "scope": "powershell",
		"body": [
            "[CmdletBinding()]"
            "Function ${1|Backup,Checkpoint,Compare,Compress,Convert,ConvertFrom,ConvertTo,Dismount,Edit,Expand,Export,Group,Import,Initialize,Limit,Merge,Mount,Out,Publish,Restore,Save,Sync,Unpublish,Update|}-${2:Noun} {",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
        ],
        "description": "PowerShell function using verb from System.Management.Automation.VerbsData."
	},
	"Diagnostic PSCmdlet class": {
		"prefix": "ps-function-diagnostic",
        "scope": "powershell",
		"body": [
            "[CmdletBinding()]"
            "Function ${1|Debug,Measure,Ping,Repair,Resolve,Test,Trace|}-${2:Noun} {",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
        ],
        "description": "PowerShell function using verb from System.Management.Automation.VerbsDiagnostic."
	},
	"Lifecycle PSCmdlet class": {
		"prefix": "ps-function-lifecycle",
        "scope": "powershell",
		"body": [
            "[CmdletBinding()]"
            "Function ${1|Approve,Assert,Build,Complete,Confirm,Deny,Deploy,Disable,Enable,Install,Invoke,Register,Request,Restart,Resume,Start,Stop,Submit,Suspend,Uninstall,Unregister,Wait|}-${2:Noun} {",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
        ],
        "description": "PSCmdlet class using verb from System.Management.Automation.VerbsLifecycle."
	},
	"Security PSCmdlet class": {
		"prefix": "ps-function-security",
        "scope": "powershell",
		"body": [
            "[CmdletBinding()]"
            "Function ${1|Block,Grant,Protect,Revoke,Unblock,Unprotect|}-${2:Noun} {",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
        ],
        "description": "PowerShell function using verb from System.Management.Automation.VerbsSecurity."
	},
	"Use PSCmdlet class": {
		"prefix": "ps-function-use",
        "scope": "powershell",
		"body": [
            "[CmdletBinding()]"
            "Function Use-${1:Noun} {",
            "    [CmdletBinding()]",
            "    Param (",
            "        $0",
            "    )",
            "",
            "    # Begin {",
            "    # }",
            "",
            "    Process {",
            "    }",
            "",
            "    # End {",
            "    # }",
            "",
            "    <#",
            "        .SYNOPSIS",
            "        ${2:Synopsis.}",
            "",
            "        .DESCRIPTION",
            "        ${3:Description.}",
            "",
            "        .INPUTS",
            "        ${4:System.Object[]. description.}",
            "",
            "        .OUTPUTS",
            "        ${5:System.Object[]. description.}",
            "",
            "        .EXAMPLE",
            "    #>",
            "}"
        ],
        "description": "PowerShell function with the Use verb."
	}
}